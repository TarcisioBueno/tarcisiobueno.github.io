[
  {
    "objectID": "jupyter-notebooks.html",
    "href": "jupyter-notebooks.html",
    "title": "TarcisioBueno",
    "section": "",
    "text": "How to run a jupyter notebook through a remote server on local machine?\n\n\n\n\n\n\ndata science\n\n\ncode\n\n\n\n\n\n\n\n\n\nJul 28, 2024\n\n\nTarcisio Bueno\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My personal website",
    "section": "",
    "text": "Welcome to my personal website! This digital space is a knowledge hub where I showcase my passion for machine learning and data science. Here, you’ll find:"
  },
  {
    "objectID": "index.html#about-me",
    "href": "index.html#about-me",
    "title": "My personal website",
    "section": "About Me",
    "text": "About Me"
  },
  {
    "objectID": "index.html#my-toolbox",
    "href": "index.html#my-toolbox",
    "title": "My personal website",
    "section": "My Toolbox",
    "text": "My Toolbox"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "class-notes.html",
    "href": "class-notes.html",
    "title": "Class Notes",
    "section": "",
    "text": "Welcome to my collection of class notes from various courses during my studies. Each topic contains detailed notes with code snippets and interactive animations where applicable.\n\n  \n    \n      \n        \n          \n            Deep Learning\n            Notes about deep learning.\n            View Notes →\n          \n        \n      \n    \n\n\n  \n\n\nWelcome to my collection of class notes from various courses during my studies. Each topic contains detailed notes with code snippets and interactive animations where applicable."
  },
  {
    "objectID": "jupyter-notebooks/21-07-2024-test/test.html",
    "href": "jupyter-notebooks/21-07-2024-test/test.html",
    "title": "How to run a jupyter notebook through a remote server on local machine?",
    "section": "",
    "text": "First, it’s important to create a virtual environment where you’ll run your Jupyter notebook. This isolates your project dependencies from other Python projects.\npython3 -m venv path/to/venv\n\n## Creating a virtual environment\n\nFirst, it is important to create a virtual enviroment where you will run your jupyter notebook. \n\n```bash\npython3 -m venv path/to/venv\nTo activate it, type the following into your command line:\nsource path/to/venv/bin/activate\nInstall jupyter lab or jupyter notebook in your new environement:\npip install jupyterlab  # for Jupyter Lab\n# or\npip install notebook    # for Jupyter Notebook\n\nRun a jupyter notebook or jupyter lab with no-browser on port 8080 (it could be another port).\n\n```bash\njupyter notebook --no-browser --port=8080\nor\njupyter lab --no-browser --port=8080\nNow, run the following command:\n```bash ssh -L 8080:localhost:8080 @\nThis command sets up what’s called “local port forwarding”. Here’s what each part means:\nssh: The basic command to start a Secure Shell connection. -L: This flag tells SSH to set up local port forwarding. 8080:localhost:8080: This is the port forwarding specification:\nThe first 8080 is the local port on your machine. localhost refers to the remote machine (from the remote machine’s perspective). The second 8080 is the port on the remote machine where Jupyter is running.\n@: This specifies the username and hostname of the remote server.\nHere’s what happens when you run this command:\n\nIt establishes an SSH connection to the remote host.\nIt sets up a tunnel that forwards connections from your local port 8080 to port 8080 on the remote machine.\nWhen you access http://localhost:8080 in your local browser, the request is securely forwarded through the SSH tunnel to port 8080 on the remote machine.\nThe remote Jupyter server receives the request and sends the response back through the same tunnel."
  },
  {
    "objectID": "jupyter-notebooks/21-07-2024-test/test.html#creating-and-using-a-virtual-environment-for-jupyter",
    "href": "jupyter-notebooks/21-07-2024-test/test.html#creating-and-using-a-virtual-environment-for-jupyter",
    "title": "How to run a jupyter notebook through a remote server on local machine?",
    "section": "",
    "text": "First, it’s important to create a virtual environment where you’ll run your Jupyter notebook. This isolates your project dependencies from other Python projects.\npython3 -m venv path/to/venv\n\n## Creating a virtual environment\n\nFirst, it is important to create a virtual enviroment where you will run your jupyter notebook. \n\n```bash\npython3 -m venv path/to/venv\nTo activate it, type the following into your command line:\nsource path/to/venv/bin/activate\nInstall jupyter lab or jupyter notebook in your new environement:\npip install jupyterlab  # for Jupyter Lab\n# or\npip install notebook    # for Jupyter Notebook\n\nRun a jupyter notebook or jupyter lab with no-browser on port 8080 (it could be another port).\n\n```bash\njupyter notebook --no-browser --port=8080\nor\njupyter lab --no-browser --port=8080\nNow, run the following command:\n```bash ssh -L 8080:localhost:8080 @\nThis command sets up what’s called “local port forwarding”. Here’s what each part means:\nssh: The basic command to start a Secure Shell connection. -L: This flag tells SSH to set up local port forwarding. 8080:localhost:8080: This is the port forwarding specification:\nThe first 8080 is the local port on your machine. localhost refers to the remote machine (from the remote machine’s perspective). The second 8080 is the port on the remote machine where Jupyter is running.\n@: This specifies the username and hostname of the remote server.\nHere’s what happens when you run this command:\n\nIt establishes an SSH connection to the remote host.\nIt sets up a tunnel that forwards connections from your local port 8080 to port 8080 on the remote machine.\nWhen you access http://localhost:8080 in your local browser, the request is securely forwarded through the SSH tunnel to port 8080 on the remote machine.\nThe remote Jupyter server receives the request and sends the response back through the same tunnel."
  }
]